/*
 * Ads app API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Comment;
import org.openapitools.client.model.CreateAds;
import java.io.File;
import org.openapitools.client.model.FullAds;
import org.openapitools.client.model.LoginReq;
import org.openapitools.client.model.NewPassword;
import org.openapitools.client.model.RegisterReq;
import org.openapitools.client.model.ResponseWrapperAds;
import org.openapitools.client.model.ResponseWrapperComment;
import org.openapitools.client.model.User;
import org.junit.Test;
import org.junit.Ignore;

import java.util.List;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * Добавить объявление
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addAdTest() throws ApiException {
        CreateAds properties = null;
        File image = null;
        org.openapitools.client.model.Ads response = api.addAd(properties, image);

        // TODO: test validations
    }
    
    /**
     * Добавить комментарий к объявлению
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCommentTest() throws ApiException {
        Integer id = null;
        Comment comment = null;
        Comment response = api.addComment(id, comment);

        // TODO: test validations
    }
    
    /**
     * Удалить комментарий
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCommentTest() throws ApiException {
        Integer adId = null;
        Integer commentId = null;
        api.deleteComment(adId, commentId);

        // TODO: test validations
    }
    
    /**
     * Получить информацию об объявлении
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAdsTest() throws ApiException {
        Integer id = null;
        FullAds response = api.getAds(id);

        // TODO: test validations
    }
    
    /**
     * Получить объявления авторизованного пользователя
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAdsMeTest() throws ApiException {
        ResponseWrapperAds response = api.getAdsMe();

        // TODO: test validations
    }
    
    /**
     * Получить все объявления
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllAdsTest() throws ApiException {
        ResponseWrapperAds response = api.getAllAds();

        // TODO: test validations
    }
    
    /**
     * Получить комментарии объявления
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCommentsTest() throws ApiException {
        Integer id = null;
        ResponseWrapperComment response = api.getComments(id);

        // TODO: test validations
    }
    
    /**
     * Получить информацию об авторизованном пользователе
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserTest() throws ApiException {
        User response = api.getUser();

        // TODO: test validations
    }
    
    /**
     * Авторизация пользователя
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void loginTest() throws ApiException {
        LoginReq loginReq = null;
        api.login(loginReq);

        // TODO: test validations
    }
    
    /**
     * Регистрация пользователя
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registerTest() throws ApiException {
        RegisterReq registerReq = null;
        api.register(registerReq);

        // TODO: test validations
    }
    
    /**
     * Удалить объявление
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeAdTest() throws ApiException {
        Integer id = null;
        api.removeAd(id);

        // TODO: test validations
    }
    
    /**
     * Обновление пароля
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setPasswordTest() throws ApiException {
        NewPassword newPassword = null;
        api.setPassword(newPassword);

        // TODO: test validations
    }
    
    /**
     * Обновить информацию об объявлении
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAdsTest() throws ApiException {
        Integer id = null;
        CreateAds createAds = null;
        org.openapitools.client.model.Ads response = api.updateAds(id, createAds);

        // TODO: test validations
    }
    
    /**
     * Обновить комментарий
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCommentTest() throws ApiException {
        Integer adId = null;
        Integer commentId = null;
        Comment comment = null;
        Comment response = api.updateComment(adId, commentId, comment);

        // TODO: test validations
    }
    
    /**
     * Обновить картинку объявления
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateImageTest() throws ApiException {
        Integer id = null;
        File image = null;
        List<byte[]> response = api.updateImage(id, image);

        // TODO: test validations
    }
    
    /**
     * Обновить информацию об авторизованном пользователе
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserTest() throws ApiException {
        User user = null;
        User response = api.updateUser(user);

        // TODO: test validations
    }
    
    /**
     * Обновить аватар авторизованного пользователя
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserImageTest() throws ApiException {
        File image = null;
        api.updateUserImage(image);

        // TODO: test validations
    }
    
}
